a:79:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1;}i:3;a:3:{i:0;s:12:"section_edit";i:1;a:4:{i:0;i:-1;i:1;i:0;i:2;i:1;i:3;s:0:"";}i:2;i:1;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:9:"Objective";i:1;i:1;i:2;i:1;}i:2;i:1;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:24;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:25;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:149:"The goal of the project is to develop an audio-conferencing service, using Push-To-Talk technology, deployed over wireless mesh network(in this case ";}i:2;i:26;}i:9;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:20:"https://smesh-org.github.io/index.html";i:1;s:5:"SMesh";}i:2;i:175;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:")";}i:2;i:205;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:206;}i:12;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:216;}i:13;a:3:{i:0;s:12:"section_edit";i:1;a:4:{i:0;i:1;i:1;i:215;i:2;i:1;i:3;s:9:"Objective";}i:2;i:216;}i:14;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"What is Push-To-Talk?";i:1;i:1;i:2;i:216;}i:2;i:216;}i:15;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:216;}i:16;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:251;}i:17;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:81:"Push-To-Talk (PTT) is a two-way communication service, but one that works like a ";}i:2;i:252;}i:18;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:333;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"walkie talkie";}i:2;i:334;}i:20;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:347;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:353:". While a normal phone call is full-duplex, meaning both parties can hear each other at the same time, PTT is half-duplex, the communication can only happen in one direction at any given time. PTT requires that the person who wishes to speak,presses a button while talking and then releases it when he is done.The receiving party/parties hear the sender";}i:2;i:348;}i:22;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:701;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:93:"s voice without any action on their part, for example, without having to even answer the call";}i:2;i:702;}i:24;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:795;}i:25;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:799;}i:26;a:3:{i:0;s:12:"section_edit";i:1;a:4:{i:0;i:216;i:1;i:798;i:2;i:1;i:3;s:21:"What is Push-To-Talk?";}i:2;i:799;}i:27;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:37:"Audio Conferencing using Push-To-Talk";i:1;i:2;i:2;i:799;}i:2;i:799;}i:28;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:799;}i:29;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:848;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:520:"The 1-to-many communication feature in PTT enables a user to setup a voice communication with multiple users, where the participants speak one at a time and the voice is carried to all the participants of the conference. Due to the half-duplex nature of PTT, each participant in the audio conference must wait until the current speaker has finished speaking, and therefore the challenge involved in conducting an audio conference is, the co-ordination among the participants in a manner that is fair to every participant";}i:2;i:849;}i:31;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1369;}i:32;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1371;}i:33;a:3:{i:0;s:12:"section_edit";i:1;a:4:{i:0;i:799;i:1;i:1370;i:2;i:2;i:3;s:37:"Audio Conferencing using Push-To-Talk";}i:2;i:1371;}i:34;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:19:"Project Description";i:1;i:1;i:2;i:1371;}i:2;i:1371;}i:35;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1371;}i:36;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1404;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1405;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:493:"The original idea was to develop a completely distributed algorithm to handle the co-ordination among the various participants of the conference. But, due to lack of time and the additional complexities involved in the distributed algorithm, I decided to solve the problem of coordination using a semi-distributed approach, one that has a coordinator per conference rather than peer-to-peer which could have been achieved using the distributed approach. The project implementation details are ";}i:2;i:1406;}i:39;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1899;}i:40;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:4:"here";i:1;N;}i:2;i:1901;}i:41;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1909;}i:42;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1911;}i:43;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1913;}i:44;a:3:{i:0;s:12:"section_edit";i:1;a:4:{i:0;i:1371;i:1;i:1912;i:2;i:1;i:3;s:19:"Project Description";}i:2;i:1913;}i:45;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:29:"Current Status of the Project";i:1;i:1;i:2;i:1913;}i:2;i:1913;}i:46;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1913;}i:47;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1956;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1957;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:235:"I have finished the implementation of the control messaging except for the retransmissions of the messages which is required for reliability. Also, an application for capturing and playing voice is yet to be integrated into the client.";}i:2;i:1958;}i:50;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2193;}i:51;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2193;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"The things I";}i:2;i:2195;}i:53;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:2207;}i:54;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:"d like to add to the project:";}i:2;i:2208;}i:55;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:2237;}i:56;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:2239;}i:57;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:"1. Additional realiability - in case where the co-ordinator of the conference crashes.";}i:2;i:2240;}i:58;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:2326;}i:59;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:2328;}i:60;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:55:"2. Distribute the voice packets in an efficient manner.";}i:2;i:2329;}i:61;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:2384;}i:62;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:2386;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"3. ";}i:2;i:2387;}i:64;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"GUI";}i:2;i:2390;}i:65;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:" for the client.";}i:2;i:2393;}i:66;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:2409;}i:67;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2411;}i:68;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2413;}i:69;a:3:{i:0;s:12:"section_edit";i:1;a:4:{i:0;i:1913;i:1;i:2412;i:2;i:1;i:3;s:29:"Current Status of the Project";}i:2;i:2413;}i:70;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:7:"Creator";i:1;i:1;i:2;i:2413;}i:2;i:2413;}i:71;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:2413;}i:72;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2434;}i:73;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:"Pratibha Mallya for the Advanced Distributed Systems Course at Johns Hopkins University";}i:2;i:2435;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:2522;}i:75;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2522;}i:76;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2522;}i:77;a:3:{i:0;s:12:"section_edit";i:1;a:4:{i:0;i:2413;i:1;i:0;i:2;i:1;i:3;s:7:"Creator";}i:2;i:2522;}i:78;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:2522;}}