a:56:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:"Here we investigate manipulating the TCP/IP transfer in order to increment the cost to the sender.";}i:2;i:1;}i:3;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:99;}i:4;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:99;}i:5;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:222:"The application makes use of packet sniffing and packet injection to do whatever it wants.  To initiate the transfer, the application makes a request for an html page from an Apache web server I have running in Windows XP.";}i:2;i:101;}i:6;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:323;}i:7;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:323;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:217:"When set to NORMAL_MODE the app tries to act as closely as possible to a normal TCP/IP connection.   Therefore this test can be used to compare the sniffing/injection quality against the real thing.  Obviously we didn";}i:2;i:325;}i:9;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:542;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:267:"t implement the whole stack, so for instance the window size indicated in our packets remains constant while the real stack would change this based on previous events.  We make a request from Firefox utilizing the Linux TCP/IP stack to provide a trace for comparison.";}i:2;i:543;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:810;}i:12;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:810;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:361:"When set to MISBEHAVING_MODE, the sender sends its window of packets but is only sent one ACK for the very first packet.  Meaning it will have to retransmit all the other packets.  The app waits until a timeout (about .02 seconds) of the packet sniffer or until the earliest non-ACKed TCP packet is received for the second time, to send an ACK for that packet. ";}i:2;i:812;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1173;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1173;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"Ex to illustrate model behavior:";}i:2;i:1175;}i:17;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1207;}i:18;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1207;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:"(acknowledgment number is for next expected packet)";}i:2;i:1209;}i:20;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1260;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:"SENDER: SEQ_NUMS: 1 2 3 4 5 6 7 8 9 10";}i:2;i:1261;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1299;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"RECEIVER: ACK_NUMS: 2";}i:2;i:1300;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1321;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"SENDER: SEQ_NUMS: 2 3 4 5 6 7 8 9 10";}i:2;i:1322;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1358;}i:27;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"RECEIVER: ACK_NUMS: 3";}i:2;i:1359;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1380;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"SENDER: SEQ_NUMS: 3 4 5 6 7 8 9 10";}i:2;i:1381;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1415;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"...";}i:2;i:1416;}i:32;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1419;}i:33;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1419;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:282:"The number of duplicate ACKS sent by the receiver varies with the different tests to see what benefit this technique has.  Ideally three duplicate ACKs should mean fast retransmission, and thus, quicker recovery of the transmission window.  More than three should inflate the sender";}i:2;i:1421;}i:35;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:1703;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:"s window allowing more packets to be sent despite the previous loss.";}i:2;i:1704;}i:37;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1772;}i:38;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1772;}i:39;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"Results:";}i:2;i:1774;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1782;}i:41;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:"The results seem to indicate that sending duplicate ACKs doesn";}i:2;i:1783;}i:42;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:1845;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:171:"t impact the number of retransmissions that much.  There is a small increase in the total bytes sent by the sender which is the result of it ACKing each duplicate ACK.  It";}i:2;i:1846;}i:44;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:2017;}i:45;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:188:"s good enough for the receiver just to send the one ACK.  For the typical size of our spam, 10KB, when the receiver operates under MISBEHAVING_MODE the sender sends a total of 40KB.  So it";}i:2;i:2018;}i:46;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:2206;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:"s pretty much exactly as we calculated in class, a 1:4 ratio.";}i:2;i:2207;}i:48;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2268;}i:49;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2268;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:147:"As seen can be seen in the tests, the amplification is larger with bigger pages, but this would flatten eventually and is irrelevant since spam isn";}i:2;i:2270;}i:51;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:2417;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"t that big to begin with!";}i:2;i:2418;}i:53;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2443;}i:54;a:3:{i:0;s:4:"code";i:1;a:2:{i:0;s:2656:"10KB		Address A	Port A	Address B	Port B	Packets	Bytes	Packets A->B	Bytes A->B	Packets A<-B	Bytes A<-B	Time(s)
ACK_NUM_1	192.168.247.128	5581	192.168.209.1	http	47	44301	11		1019		36		43282		0.897365
ACK_NUM_3	192.168.247.128	9034	192.168.209.1	http	73	45777	25		1775		48		44002		1.057954
ACK_NUM_6	192.168.247.128	9594	192.168.209.1	http	112	47991	46		2909		66		45082		0.942003
ACK_NUM_9	192.168.247.128	7690	192.168.209.1	http	151	50197	67		4043		84		46154		1.208762
NORMAL_MODE	192.168.247.128	7216	192.168.209.1	http	23	11230	12		1073		11		10157		0.146188
FIREFOX		192.168.247.128	36642	192.168.209.1	http	25	11407	13		1190		12		10217		0.168774

20KB		Address A	Port A	Address B	Port B	Packets	Bytes	Packets A->B	Bytes A->B	Packets A<-B	Bytes A<-B	Time(s)
ACK_NUM_1	192.168.247.128	5972	192.168.209.1	http	117	142983	17		1343		100		141640		1.63701
ACK_NUM_3	192.168.247.128	7590	192.168.209.1	http	167	145841	43		2747		124		143094		1.672872
ACK_NUM_6	192.168.247.128	9149	192.168.209.1	http	242	150093	82		4853		160		145240		1.725495
ACK_NUM_9	192.168.247.128	8724	192.168.209.1	http	317	154359	121		6959		196		147400		2.05343
NORMAL_MODE	192.168.247.128	9084	192.168.209.1	http	37	21244	19		1451		18		19793		0.437771
FIREFOX		192.168.247.128	48231	192.168.209.1	http	37	21308	19		1514		18		19794		0.18423

40KB		Address A	Port A	Address B	Port B	Packets	Bytes	Packets A->B	Bytes A->B	Packets A<-B	Bytes A<-B	Time(s)
ACK_NUM_1	192.168.247.128	8367	192.168.209.1	http	389	517498	30		2045		359		515453		3.32168
ACK_NUM_3	192.168.247.128	8295	192.168.209.1	http	491	523282	82		4853		409		518429		3.34379
ACK_NUM_6	192.168.247.128	7117	192.168.209.1	http	644	532018	160		9065		484		522953		3.376438
ACK_NUM_9	192.168.247.128	8236	192.168.209.1	http	797	540754	238		13277		559		527477		3.865532
NORMAL_MODE	192.168.247.128	6212	192.168.209.1	http	63	41163	32		2153		31		39010		0.816009
FIREFOX		192.168.247.128	42545	192.168.209.1	http	50	40480	21		1579		29		38901		0.132839

80KB		Address A	Port A	Address B	Port B	Packets	Bytes	Packets A->B	Bytes A->B	Packets A<-B	Bytes A<-B	Time(s)
ACK_NUM_1	192.168.247.128	9962	192.168.209.1	http	1014	1419523	55		3395		959		1416128		6.492397
ACK_NUM_3	192.168.247.128	9015	192.168.209.1	http	1193	1397070	157		8903		1036		1388167		6.367675
ACK_NUM_6	192.168.247.128	5027	192.168.209.1	http	1519	1448293	310		17165		1209		1431128		6.534806
ACK_NUM_9	192.168.247.128	8379	192.168.209.1	http	1822	1465627	463		25427		1359		1440200		7.293122
NORMAL_MODE	192.168.247.128	7984	192.168.209.1	http	125	81535	63		3827		62		77708		1.57043
FIREFOX		192.168.247.128	48230	192.168.209.1	http	83	79331	28		2000		55		77331		0.119629
";i:1;N;}i:2;i:2450;}i:55;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:2450;}}